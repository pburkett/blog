(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{509:function(e,t,s){"use strict";s.r(t);var a=s(2),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"intro-to-server-side-concerns-with-javascript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#intro-to-server-side-concerns-with-javascript"}},[e._v("#")]),e._v(" Intro to Server side concerns with JavaScript")]),e._v(" "),s("p",[s("strong",[e._v("1.")]),e._v(" What do the letters of the acronym "),s("code",[e._v("CRUD")]),e._v(" stand for?\n")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("CRUD stands for create, read, update, and delete.\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[s("strong",[e._v("2.")]),e._v(" Each action that "),s("code",[e._v("CRUD")]),e._v(" represents maps to an HTTP request. What HTTP request does each "),s("code",[e._v("CRUD")]),e._v(" action correspond to?\n")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Each CRUD action corresponds to an HTTP request as follows:\nCreate - Post\nRead - Get\nUpdate - Put\nDelete - Delete\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("p",[s("strong",[e._v("3.")]),e._v(" What does "),s("code",[e._v("ORM")]),e._v(" stand for? Which "),s("code",[e._v("ORM")]),e._v(" do we use when interacting with MongoDB\n")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("ORM stands for Object Relational Mapping. When interacting with MongoDB, we use Mongoose as our ORM.\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[s("strong",[e._v("4.")]),e._v(" Which two "),s("code",[e._v("HTTP")]),e._v(" request types include a body?\n")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Put and Post requests both require a body. \n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[s("strong",[e._v("5.")]),e._v(" In a/an _______ coding model, when you call a function, it returns only when the action has finished and stops your program for the time the action takes. Likewise in a/an _______ coding model, multiple things are allowed to happen at one time. When you perform an action, your program continues to run.  Fill in the blanks.\n")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Object Oriented\nFunctional\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[s("strong",[e._v("6.")]),e._v(" Fill in the missing piece of this snippet of code.")]),e._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" ______ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"_______"')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("let")]),e._v(" Schema "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" ________"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("Schema"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("mongoose\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[s("strong",[e._v("7.")]),e._v(" What is middleware?\n")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Middleware is a blanket term for all software that acts between the main functionality of a server and the clients it interacts with. Middleware can be used to handle incoming HTTP requests before the API handles them.\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[s("strong",[e._v("8.")]),e._v(" The ______ pipeline delivers information from the client while the ______ pipeline returns it. Fill in the blanks.\n")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("Request\nResponse\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[s("strong",[e._v("9.")]),e._v("\nDemonstrate the pattern that is used to include a request query with the client's "),s("code",[e._v("HTTP")]),e._v(" request providing the property "),s("code",[e._v("tag")]),e._v(" and the value "),s("code",[e._v("winter")]),e._v(".\n")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("To include query paramaters with a request, we can append `?tag=winter`. If the server is able to handle queries on the request we are making, we should be returned only resources which have a matching `tag: winter` property.\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);