(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{503:function(e,t,s){"use strict";s.r(t);var a=s(2),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"day-19"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#day-19"}},[e._v("#")]),e._v(" Day 19")]),e._v(" "),s("h2",{attrs:{id:"_1-7-2021"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-2021"}},[e._v("#")]),e._v(" "),s("strong",[e._v("1/7/2021")])]),e._v(" "),s("h2",{attrs:{id:"what-does-rest-stand-for-and-in-simple-terms-what-does-it-mean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-does-rest-stand-for-and-in-simple-terms-what-does-it-mean"}},[e._v("#")]),e._v(" What does REST stand for, and in simple terms, what does it mean?")]),e._v(" "),s("p",[e._v('REST stands for representational state transfer. REST is a set of standards for creating API\'s. It means that an API should return the full state of any requested resource. For example, when I (or my browser) make a request for a resource, I should be given all the information stored under that resource, or the "state" of it.')]),e._v(" "),s("h2",{attrs:{id:"what-does-stateless-mean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-does-stateless-mean"}},[e._v("#")]),e._v(" What does stateless mean?")]),e._v(" "),s("p",[e._v("In the context of RESTful API's, stateless means that the API does not remember information about the client. For example, the server should "),s("strong",[e._v("not")]),e._v(" save information about the client's last request, and use it to send less data about the state of a resource upon the next request.")]),e._v(" "),s("h2",{attrs:{id:"what-url-pattern-is-used-when-writing-a-restful-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-url-pattern-is-used-when-writing-a-restful-api"}},[e._v("#")]),e._v(" What URL pattern is used when writing a RESTful API?")]),e._v(" "),s("p",[e._v("URLs in RESTful APIs should look like: "),s("code",[e._v("resource/identifier/resource")]),e._v(', or shallower. For example, I\'ll look at the URLs of the Poke API. The URL for the resource "tepig" looks like this: '),s("code",[e._v("https://pokeapi.co/api/v2/pokemon/tepig")])]),e._v(" "),s("p",[s("code",[e._v("https://pokeapi.co/api/v2/")]),e._v(" directs to a resource, which holds URLs that direct to other resources. One such resource is "),s("code",[e._v("pokemon")]),e._v(".")]),e._v(" "),s("p",[s("code",[e._v("https://pokeapi.co/api/v2/pokemon")]),e._v(" directs to a resource, which holds URLs that direct to all 1118 Pokemon resources.")]),e._v(" "),s("p",[s("code",[e._v("https://pokeapi.co/api/v2/pokemon/tepig")]),e._v(" directs to a resource which holds the full state of Tepig, one of many Pokemon. Individual pokemon can also be located by ID. For example, "),s("code",[e._v("https://pokeapi.co/api/v2/pokemon/498")]),e._v(" also directs to the Tepig resource.")]),e._v(" "),s("h1",{attrs:{id:"daily-project"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#daily-project"}},[e._v("#")]),e._v(" Daily Project:")]),e._v(" "),s("p",[e._v("https://github.com/pburkett/itunes-wep-app")])])}),[],!1,null,null,null);t.default=o.exports}}]);